server:
  port: 8081
  servlet:
    context-path: /

spring:
  datasource:
    dynamic:
      primary: mall
      strict: false
      datasource:
        mall:
          username: edms
          password: edms
          url: jdbc:mysql://localhost:3306/newbee_mall_db?useUnicode=true&amp&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=UTC
          driver-class-name: com.mysql.cj.jdbc.Driver
#  quartz:
#    # 将任务等保存化到数据库
#    job-store-type: jdbc
#    # 程序结束时会等待quartz相关的内容结束
#    wait-for-jobs-to-complete-on-shutdown: true
#    # QuartzScheduler启动时更新己存在的Job,这样就不用每次修改targetObject后删除qrtz_job_details表对应记录
#    overwrite-existing-jobs: true
#    # 这里居然是个map，搞得智能提示都没有，佛了
#    properties:
#      org:
#        quartz:
#          datasource:
#            scheduleTask:
#              driver-class-name: com.mysql.cj.jdbc.Driver
#              username: edms
#              password: edms
#              url: jdbc:mysql://localhost:3306/newbee_mall_db?useUnicode=true&amp&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=UTC
#          # scheduler相关
#          scheduler:
#            # scheduler的实例名
#            instanceName: scheduler
#            instanceId: AUTO
#          # 持久化相关
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            # 表示数据库中相关表是QRTZ_开头的
#            tablePrefix: QRTZ_
#            useProperties: false
#          # 线程池相关
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            # 线程数
#            threadCount: 10
#            # 线程优先级
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
  web:
    resources:
      static-locations: classpath:/static/

mybatis:
  mapper-locations: classpath*:/mapper/*Mapper.xml
    # 配置XML映射文件中指定的实体类别名路径
  type-aliases-package: com.marks.edms.entity
  configuration:
    #springboot开启mybatis驼峰命名匹配映射
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#  %d{HH:mm:ss.SSS}——日志输出时间
#  %thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用
#  %-5level——日志级别，并且使用5个字符靠左对齐
#  %logger- ——日志输出者的名字
#  %msg——日志消息
#  %n——平台的换行符

#logging:
#  config: classpath:/logback/logback-spring.xml
#  path: C:\logs\gitProject
#  file: new_bee_mall.log
#  pattern:
#    file: %d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
#    console: %d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n